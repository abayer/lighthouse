# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: lh-create-draft-release
spec:
  params:
    - name: revision
      type: string
      description: The revision which will be tagged and released.
    - name: release-tag
      type: string
      description: Release number and git tag to be applied (e.g. 0.888.1, with 'v')
    - name: previous-release-tag
      type: string
      description: Previous release number - for author and PR list calculation
  workspaces:
    - name: source
      mountPath: /workspace/src/github.com/jenkins-x/lighthouse

  stepTemplate:
    env:
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: github-token
            key: GITHUB_TOKEN
      - name: VERSION
        value: $(params.release-tag)
      - name: OLD_VERSION
        value: $(params.previous-release-tag)
  steps:
    - name: header
      image: gcr.io/tekton-releases/dogfooding/hub
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -ex
        cat <<EOF | tee release.md
        Lighthouse release ${VERSION}
        # ðŸŽ‰ [Tag Line - to be done] ðŸŽ‰
        -[Docs @ ${VERSION}](https://github.com/${PROJECT}/tree/${VERSION}/docs)
        -[Examples @ ${VERSION}](https://github.com/${PROJECT}/tree/${VERSION}/examples)
        ## Installation one-liner
        \`\`\`
        TODO: Helm
        \`\`\`
        ## Upgrade Notices
        [TBD]
        ## Changes
        EOF
    - name: filter-data
      image: gcr.io/tekton-releases/dogfooding/hub
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -ex
        # Restore full git history
        git fetch --unshallow
        # UPPER_THRESHOLD is the newest sha we are interested in
        UPPER_THRESHOLD=$(params.revision)
        # COMMON_ANCESTOR is the common ancestore between the OLD_VERSION and UPPER_THRESHOLD
        COMMON_ANCESTOR=$(git merge-base ${OLD_VERSION} ${UPPER_THRESHOLD})
        # OLD_RELEASE_SUBJECTS is the list of commit subjects cherry-picked (probably?) from master
        OLD_RELEASE_SUBJECTS=old_subjects.txt
        echo "Cherry-picked commits:"
        git log --format="%s" $COMMON_ANCESTOR..$OLD_VERSION | sort -u | tee $OLD_RELEASE_SUBJECTS
        echo "OLD_VERSION: $OLD_VERSION"
        echo "COMMON_ANCESTOR: $COMMON_ANCESTOR"
        echo "UPPER_THRESHOLD: $UPPER_THRESHOLD"
        # Save the PR data in CSV. Only consider PRs whose sha verifies the condition
        # COMMON_ANCESTOR is ancestor of SHA is ancestor of UPPER_THRESHOLD
        # And title no in the OLD_VERSION branch.
        # Working Assumptions:
        #   - there are no duplicate titles in commits
        #   - we always cherry-pick full PRs, never commits out of a multi-commit PR
        # Format of output data:
        # "author;number;title"
        hub pr list --state merged -L 300 -f "%sm;%au;%i;%t;%L%n" | \
          while read pr; do
            SHA=$(echo $pr | cut -d';' -f1)
            SUBJECT=$(git log -1 --format="%s" $SHA || echo "__NOT_FOUND__")
            git merge-base --is-ancestor $SHA $UPPER_THRESHOLD && \
            git merge-base --is-ancestor $COMMON_ANCESTOR $SHA && \
            ! $(egrep "^${SUBJECT}$" $OLD_RELEASE_SUBJECTS &> /dev/null) &&
            echo $pr | cut -d';' -f2-
          done > pr.csv || true  # We do not want to fail is the last of the loop is not a match
        echo "$(wc -l pr.csv | awk '{ print $1}') PRs in the new release."
        cat pr.csv
    - name: body
      image: busybox
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/sh
        set -e
        cat <<EOF | tee -a release.md
        # Features
        * :sparkles: [Feature Title]
        $(awk -F";" '/kind\/feature/{ print "* :sparkles: "$3" ("$2")" }' pr.csv)
        [Detailed feature description] (#Number).
        [Fill list here]
        # Deprecation Notices
        * :rotating_light: [Deprecation Notice Title]
        [Detailed deprecation notice description] (#Number).
        [Fill list here]
        # Backwards incompatible changes
        In current release:
        * :rotating_light: [Change Title]
        [Detailed change description] (#Number).
        [Fill list here]
        # Fixes
        * :bug: [Description (#Number)]
        $(awk -F";" '/kind\/bug/{ print "* :bug: "$3" ("$2")" }' pr.csv)
        $(awk -F";" '/kind\/flake/{ print "* :bug: "$3" ("$2")" }' pr.csv)
        [Fill list here]
        # Misc
        * :hammer: [Description (#Number)]
        $(awk -F";" '/kind\/cleanup/{ print "* :hammer: "$3" ("$2")" }' pr.csv)
        $(awk -F";" '/kind\/misc/{ print "* :hammer: "$3" ("$2")" }' pr.csv)
        [Fill list here]
        # Docs
        * :book: [Description (#Number)]
        $(awk -F";" '/kind\/documentation/{ print "* :book: "$3" ("$2")" }' pr.csv)
        [Fill list here]
        EOF
    - name: authors
      image: gcr.io/tekton-releases/dogfooding/hub
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -ex
        cat <<EOF | tee -a release.md
        ## Thanks
        Thanks to these contributors who contributed to ${VERSION}!
        EOF
        awk -F";" '{ print "- :heart: @"$1 }' pr.csv | sort -u | tee -a release.md
        cat <<EOF | tee -a release.md
        Extra shout-out for awesome release notes:
        * :heart_eyes: [@GitHub Nickname] [Fill list here]
        EOF
    - name: pr-data
      image: gcr.io/tekton-releases/dogfooding/hub
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -ex
        cat <<EOF | tee -a release.md
        ## Unsorted PR List
        # List of PRs merged between $OLD_VERSION and $VERSION
        To Be Done: Categorize these PRs into Features, Deprecation Notices,
        Backward Incompatible Changes, Fixes, Docs, Misc.
        EOF
        egrep -v 'kind/(feature|documentation|cleanup|flake|bug|misc)' pr.csv | awk -F";" '{ print "- "$3" ("$2")" }' | tee -a release.md
    - name: create-draft
      image: gcr.io/tekton-releases/dogfooding/hub
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -ex
        hub release create --draft --prerelease \
          --commitish $(params.revision) \
          --file release.md ${VERSION}
